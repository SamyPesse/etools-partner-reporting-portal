# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-12 06:07
from __future__ import unicode_literals

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('unicef', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disaggregation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('name', models.CharField(max_length=255, verbose_name='Disaggregation by')),
                ('active', models.BooleanField(default=True)),
                ('response_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='disaggregations', to='core.ResponsePlan')),
            ],
        ),
        migrations.CreateModel(
            name='DisaggregationValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('value', models.CharField(max_length=15)),
                ('active', models.BooleanField(default=True)),
                ('disaggregation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disaggregation_values', to='indicator.Disaggregation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndicatorBlueprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('title', models.CharField(db_index=True, max_length=1024)),
                ('unit', models.CharField(choices=[('number', 'number'), ('percentage', 'percentage')], default='number', max_length=10)),
                ('description', models.CharField(blank=True, max_length=3072, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('subdomain', models.CharField(blank=True, max_length=255, null=True)),
                ('disaggregatable', models.BooleanField(default=False)),
                ('calculation_formula_across_periods', models.CharField(choices=[('sum', 'sum'), ('max', 'max'), ('avg', 'avg'), ('percentage', 'percentage'), ('ratio', 'ratio')], default='sum', max_length=10)),
                ('calculation_formula_across_locations', models.CharField(choices=[('sum', 'sum'), ('max', 'max'), ('avg', 'avg'), ('percentage', 'percentage'), ('ratio', 'ratio')], default='sum', max_length=10)),
                ('display_type', models.CharField(choices=[('number', 'number'), ('percentage', 'percentage'), ('ratio', 'ratio')], default='number', max_length=10)),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorLocationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('disaggregation', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('num_disaggregation', models.IntegerField()),
                ('level_reported', models.IntegerField()),
                ('disaggregation_reported_on', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IndicatorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=255)),
                ('time_period_start', models.DateField()),
                ('time_period_end', models.DateField()),
                ('due_date', models.DateField()),
                ('submission_date', models.DateField(blank=True, null=True, verbose_name='Date of submission')),
                ('frequency', models.CharField(choices=[('Wee', 'Weekly'), ('Mon', 'Monthly'), ('Qua', 'Quarterly')], default='Mon', max_length=3, verbose_name='Frequency of reporting')),
                ('total', django.contrib.postgres.fields.jsonb.JSONField(default={'c': 0, 'd': 0, 'v': 0})),
                ('remarks', models.TextField(blank=True, null=True)),
                ('report_status', models.CharField(choices=[('Due', 'Due'), ('Ove', 'Overdue'), ('Sub', 'Submitted'), ('Sen', 'Sent back'), ('Acc', 'Accepted')], default='Due', max_length=3)),
                ('overall_status', models.CharField(choices=[('Met', 'Met'), ('OnT', 'On Track'), ('NoP', 'No Progress'), ('Con', 'Constrained'), ('NoS', 'No Status')], default='NoS', max_length=3)),
                ('narrative_assessment', models.CharField(blank=True, max_length=255, null=True)),
                ('progress_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='unicef.ProgressReport')),
            ],
            options={
                'ordering': ['-due_date', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Reportable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('external_id', models.CharField(blank=True, help_text='An ID representing this instance in an external system', max_length=32, null=True)),
                ('target', models.CharField(blank=True, max_length=255, null=True)),
                ('baseline', models.CharField(blank=True, max_length=255, null=True)),
                ('assumptions', models.TextField(blank=True, null=True)),
                ('means_of_verification', models.CharField(blank=True, max_length=255, null=True)),
                ('is_cluster_indicator', models.BooleanField(default=False)),
                ('total', django.contrib.postgres.fields.jsonb.JSONField(default={'c': 0, 'd': 0, 'v': 0})),
                ('context_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code in current context')),
                ('object_id', models.PositiveIntegerField()),
                ('frequency', models.CharField(choices=[('Wee', 'Weekly'), ('Mon', 'Monthly'), ('Qua', 'Quarterly'), ('Csd', 'Custom specific dates')], default='Mon', max_length=3, verbose_name='Frequency of reporting')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('cs_dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(), default=list, size=None)),
                ('location_admin_refs', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.jsonb.JSONField(), blank=True, default=list, null=True, size=None)),
                ('blueprint', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reportables', to='indicator.IndicatorBlueprint')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('disaggregations', models.ManyToManyField(blank=True, to='indicator.Disaggregation')),
                ('locations', models.ManyToManyField(related_name='reportables', to='core.Location')),
                ('parent_indicator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='indicator.Reportable')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='indicatorreport',
            name='reportable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='indicator.Reportable'),
        ),
        migrations.AddField(
            model_name='indicatorlocationdata',
            name='indicator_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_location_data', to='indicator.IndicatorReport'),
        ),
        migrations.AddField(
            model_name='indicatorlocationdata',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_location_data', to='core.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='disaggregation',
            unique_together=set([('name', 'response_plan')]),
        ),
    ]
